{"ast":null,"code":"var _jsxFileName = \"F:\\\\VScode\\\\ReactJS\\\\TODO\\\\todolist\\\\src\\\\pages\\\\myday.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport Sidebar from \"../components/sidebar.tsx\";\nimport Important from \"../components/important.tsx\";\nimport AddTask from \"../components/addTask.tsx\";\nimport Infobar from \"../components/infobar.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Myday() {\n  _s();\n  const [listobj, setList] = useState({});\n  const [accountObj, setAccount] = useState({\n    userId: \"-1\",\n    accountName: \"\",\n    emailId: \"\",\n    profilePic: \"sidebar-tempProfilepic.png\"\n  });\n  const [allTaskobj, setallTask] = useState({\n    tasks: [{\n      name: \"new task\",\n      dueDate: new Date(),\n      important: true,\n      repeat: true,\n      completed: true,\n      taskID: \"1\"\n    }]\n  });\n  const [infobarObj, setinfobar] = useState({\n    genClass: \"infoBar infobar-general\",\n    name: \"\",\n    steps: [\"\"],\n    remind: null,\n    dueDate: null,\n    repeat: null,\n    note: \"\",\n    createdOn: null,\n    important: false\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoBody\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      genClass: \"sidebar-general\",\n      userLists: listobj,\n      accountInfo: accountObj\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainContent-general\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainContent-general-tasklist\",\n        children: /*#__PURE__*/_jsxDEV(Important, {\n          ...allTaskobj\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainContent-general-addTask\",\n        children: /*#__PURE__*/_jsxDEV(AddTask, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Infobar, {\n      ...infobarObj\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Myday, \"exLJk6l883tvKjZw9nXa5GXy+Ds=\");\n_c = Myday;\nvar _c;\n$RefreshReg$(_c, \"Myday\");","map":{"version":3,"names":["React","useState","Sidebar","Important","AddTask","Infobar","jsxDEV","_jsxDEV","Myday","_s","listobj","setList","accountObj","setAccount","userId","accountName","emailId","profilePic","allTaskobj","setallTask","tasks","name","dueDate","Date","important","repeat","completed","taskID","infobarObj","setinfobar","genClass","steps","remind","note","createdOn","className","children","userLists","accountInfo","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/VScode/ReactJS/TODO/todolist/src/pages/myday.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport Sidebar from \"../components/sidebar.tsx\";\r\nimport Important from \"../components/important.tsx\";\r\nimport AddTask from \"../components/addTask.tsx\";\r\nimport Infobar from \"../components/infobar.tsx\";\r\n\r\nexport function Myday() {\r\n  const [listobj, setList] = useState({});\r\n  const [accountObj, setAccount] = useState({\r\n    userId: \"-1\",\r\n    accountName: \"\",\r\n    emailId: \"\",\r\n    profilePic: \"sidebar-tempProfilepic.png\",\r\n  });\r\n  const [allTaskobj, setallTask] = useState({\r\n    tasks: [\r\n      {\r\n        name: \"new task\",\r\n        dueDate: new Date(),\r\n        important: true,\r\n        repeat: true,\r\n        completed: true,\r\n        taskID: \"1\",\r\n      },\r\n    ],\r\n  });\r\n  const [infobarObj, setinfobar] = useState({\r\n    genClass: \"infoBar infobar-general\",\r\n    name: \"\",\r\n    steps: [\"\"],\r\n    remind: null,\r\n    dueDate: null,\r\n    repeat: null,\r\n    note: \"\",\r\n    createdOn: null,\r\n    important: false,\r\n  });\r\n  return (\r\n    <div className=\"todoBody\">\r\n      <Sidebar\r\n        genClass=\"sidebar-general\"\r\n        userLists={listobj}\r\n        accountInfo={accountObj}\r\n      />\r\n      <div className=\"mainContent-general\">\r\n        <div className=\"mainContent-general-tasklist\">\r\n          <Important {...allTaskobj} />\r\n        </div>\r\n        <div className=\"mainContent-general-addTask\">\r\n          <AddTask />\r\n        </div>\r\n      </div>\r\n      <Infobar {...infobarObj} />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,OAAOC,OAAO,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,OAAO,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EACvC,MAAM,CAACW,UAAU,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC;IACxCa,MAAM,EAAE,IAAI;IACZC,WAAW,EAAE,EAAE;IACfC,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE;EACd,CAAC,CAAC;EACF,MAAM,CAACC,UAAU,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC;IACxCmB,KAAK,EAAE,CACL;MACEC,IAAI,EAAE,UAAU;MAChBC,OAAO,EAAE,IAAIC,IAAI,CAAC,CAAC;MACnBC,SAAS,EAAE,IAAI;MACfC,MAAM,EAAE,IAAI;MACZC,SAAS,EAAE,IAAI;MACfC,MAAM,EAAE;IACV,CAAC;EAEL,CAAC,CAAC;EACF,MAAM,CAACC,UAAU,EAAEC,UAAU,CAAC,GAAG5B,QAAQ,CAAC;IACxC6B,QAAQ,EAAE,yBAAyB;IACnCT,IAAI,EAAE,EAAE;IACRU,KAAK,EAAE,CAAC,EAAE,CAAC;IACXC,MAAM,EAAE,IAAI;IACZV,OAAO,EAAE,IAAI;IACbG,MAAM,EAAE,IAAI;IACZQ,IAAI,EAAE,EAAE;IACRC,SAAS,EAAE,IAAI;IACfV,SAAS,EAAE;EACb,CAAC,CAAC;EACF,oBACEjB,OAAA;IAAK4B,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvB7B,OAAA,CAACL,OAAO;MACN4B,QAAQ,EAAC,iBAAiB;MAC1BO,SAAS,EAAE3B,OAAQ;MACnB4B,WAAW,EAAE1B;IAAW;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eACFnC,OAAA;MAAK4B,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAClC7B,OAAA;QAAK4B,SAAS,EAAC,8BAA8B;QAAAC,QAAA,eAC3C7B,OAAA,CAACJ,SAAS;UAAA,GAAKe;QAAU;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,eACNnC,OAAA;QAAK4B,SAAS,EAAC,6BAA6B;QAAAC,QAAA,eAC1C7B,OAAA,CAACH,OAAO;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNnC,OAAA,CAACF,OAAO;MAAA,GAAKuB;IAAU;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEV;AAACjC,EAAA,CAjDeD,KAAK;AAAAmC,EAAA,GAALnC,KAAK;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}