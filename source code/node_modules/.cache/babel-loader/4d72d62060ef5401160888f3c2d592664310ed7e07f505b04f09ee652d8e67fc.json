{"ast":null,"code":"var _jsxFileName = \"F:\\\\VScode\\\\ReactJS\\\\TODO\\\\todolist\\\\src\\\\pages\\\\dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { memo } from \"react\";\nimport { useState } from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Sidebar from \"../components/sidebar.tsx\";\nimport Important from \"../components/important.tsx\";\nimport AddTask from \"../components/addTask.tsx\";\nimport Infobar from \"../components/infobar.tsx\";\nimport General from \"../components/General.tsx\";\nimport Planned from \"../components/Planned.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst pageID = {\n  myday,\n  important,\n  planned,\n  tasks,\n  list\n};\nfunction Dashboard() {\n  _s();\n  const [listobj, setList] = useState({});\n  const [accountObj, setAccount] = useState({\n    userId: \"-1\",\n    accountName: \"\",\n    emailId: \"\",\n    profilePic: \"sidebar-tempProfilepic.png\"\n  });\n  const [dataOBj, setdataobj] = useState({\n    tasks: [{\n      name: \"new task\",\n      dueDate: new Date(),\n      important: true,\n      repeat: true,\n      completed: true,\n      taskID: \"1\"\n    }]\n  });\n  const [infobarObj, setinfobar] = useState({\n    genClass: \"infoBar infobar-general\",\n    name: \"\",\n    steps: [\"\"],\n    remind: null,\n    dueDate: null,\n    repeat: null,\n    note: \"\",\n    createdOn: null,\n    important: false\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      genClass: \"sidebar-general\",\n      userLists: listobj,\n      accountInfo: accountObj\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainContent-general\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainContent-general-tasklist\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/myday\",\n            element: /*#__PURE__*/_jsxDEV(General, {\n              ...dataOBj\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/important\",\n            element: /*#__PURE__*/_jsxDEV(Important, {\n              ...dataOBj\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/planned\",\n            element: /*#__PURE__*/_jsxDEV(Planned, {\n              ...dataOBj\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/tasks\",\n            element: /*#__PURE__*/_jsxDEV(General, {\n              ...dataOBj\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/lists/:id\",\n            element: /*#__PURE__*/_jsxDEV(General, {\n              ...dataOBj\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainContent-general-addTask\",\n        children: /*#__PURE__*/_jsxDEV(AddTask, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Infobar, {\n      ...infobarObj\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Dashboard, \"qCDh9L6OKt5dKYrBVHdN9c4V6FU=\");\n_c = Dashboard;\nexport default _c2 = /*#__PURE__*/memo(Dashboard);\nvar _c, _c2;\n$RefreshReg$(_c, \"Dashboard\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","memo","useState","Route","Routes","Sidebar","Important","AddTask","Infobar","General","Planned","jsxDEV","_jsxDEV","Fragment","_Fragment","pageID","myday","important","planned","tasks","list","Dashboard","_s","listobj","setList","accountObj","setAccount","userId","accountName","emailId","profilePic","dataOBj","setdataobj","name","dueDate","Date","repeat","completed","taskID","infobarObj","setinfobar","genClass","steps","remind","note","createdOn","children","userLists","accountInfo","fileName","_jsxFileName","lineNumber","columnNumber","className","path","element","_c","_c2","$RefreshReg$"],"sources":["F:/VScode/ReactJS/TODO/todolist/src/pages/dashboard.tsx"],"sourcesContent":["import React, { memo } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport Sidebar from \"../components/sidebar.tsx\";\r\nimport Important from \"../components/important.tsx\";\r\nimport AddTask from \"../components/addTask.tsx\";\r\nimport Infobar from \"../components/infobar.tsx\";\r\nimport General from \"../components/General.tsx\";\r\nimport Planned from \"../components/Planned.tsx\";\r\n\r\nconst pageID = { myday, important, planned, tasks, list };\r\n\r\nfunction Dashboard() {\r\n  const [listobj, setList] = useState({});\r\n  const [accountObj, setAccount] = useState({\r\n    userId: \"-1\",\r\n    accountName: \"\",\r\n    emailId: \"\",\r\n    profilePic: \"sidebar-tempProfilepic.png\",\r\n  });\r\n  const [dataOBj, setdataobj] = useState({\r\n    tasks: [\r\n      {\r\n        name: \"new task\",\r\n        dueDate: new Date(),\r\n        important: true,\r\n        repeat: true,\r\n        completed: true,\r\n        taskID: \"1\",\r\n      },\r\n    ],\r\n  });\r\n  const [infobarObj, setinfobar] = useState({\r\n    genClass: \"infoBar infobar-general\",\r\n    name: \"\",\r\n    steps: [\"\"],\r\n    remind: null,\r\n    dueDate: null,\r\n    repeat: null,\r\n    note: \"\",\r\n    createdOn: null,\r\n    important: false,\r\n  });\r\n  return (\r\n    <>\r\n      <Sidebar\r\n        genClass=\"sidebar-general\"\r\n        userLists={listobj}\r\n        accountInfo={accountObj}\r\n      />\r\n      <div className=\"mainContent-general\">\r\n        <div className=\"mainContent-general-tasklist\">\r\n          <Routes>\r\n            <Route path=\"/myday\" element={<General {...dataOBj} />} />\r\n            <Route path=\"/important\" element={<Important {...dataOBj} />} />\r\n            <Route path=\"/planned\" element={<Planned {...dataOBj} />}></Route>\r\n            <Route path=\"/tasks\" element={<General {...dataOBj} />}></Route>\r\n            <Route path=\"/lists/:id\" element={<General {...dataOBj} />}></Route>\r\n          </Routes>\r\n        </div>\r\n        <div className=\"mainContent-general-addTask\">\r\n          <AddTask />\r\n        </div>\r\n      </div>\r\n      <Infobar {...infobarObj} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default memo(Dashboard);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}