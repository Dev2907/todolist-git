{"ast":null,"code":"var _jsxFileName = \"F:\\\\VScode\\\\ReactJS\\\\TODO\\\\todolist\\\\src\\\\pages\\\\dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { memo, useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { Route, Routes, useLocation, useNavigate } from \"react-router-dom\";\nimport Sidebar from \"../components/sidebar.tsx\";\nimport Important from \"../components/important.tsx\";\nimport AddTask from \"../components/addTask.tsx\";\nimport Infobar from \"../components/infobar.tsx\";\nimport General from \"../components/General.tsx\";\nimport Planned from \"../components/Planned.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Dashboard(_ref) {\n  _s();\n  let {\n    state,\n    updatestate\n  } = _ref;\n  const location = useLocation();\n  const getListname = async () => {\n    try {\n      const response = await fetch(\"api/getLists\");\n      if (response.ok) {\n        return await response.json();\n      } else {\n        return {};\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const getAccountinfo = async () => {\n    try {\n      const response = await fetch(\"api/getUser\");\n      if (response.ok) {\n        return await response.json();\n      } else {\n        return {};\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const getData = async () => {\n    try {\n      const match = location.pathname.match(/\\/dashboard\\/(.*)/);\n      const important = match ? match[1] : null;\n      console.log(important); // \"important\" value\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const navigate = useNavigate();\n  const [listobj, setList] = useState({});\n  const [accountObj, setAccount] = useState({\n    userId: \"-1\",\n    accountName: \"\",\n    emailId: \"\",\n    profilepic: \"sidebar-tempProfilepic.png\"\n  });\n  const [dataOBj, setdataobj] = useState({\n    tasks: [{\n      name: \"new task\",\n      dueDate: new Date(),\n      important: true,\n      repeat: true,\n      completed: true,\n      taskID: \"1\"\n    }]\n  });\n  const [infobarObj, setinfobar] = useState({\n    genClass: \"infoBar infobar-general\",\n    name: \"\",\n    steps: [\"\"],\n    remind: null,\n    dueDate: null,\n    repeat: null,\n    note: \"\",\n    createdOn: null,\n    important: false\n  });\n  const verifySession = async () => {\n    try {\n      const response = await fetch(\"/api/verifyuser\");\n      if (response.ok) {\n        updatestate(true);\n      } else {\n        updatestate(false);\n        navigate(\"/\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    verifySession();\n    getListname().then(res => {\n      console.log(res);\n      setList(res);\n    });\n    getAccountinfo().then(res => {\n      setAccount(res);\n    });\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      genClass: \"sidebar-general\",\n      userLists: listobj,\n      accountInfo: accountObj\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainContent-general\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainContent-general-tasklist\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/myday\",\n            element: /*#__PURE__*/_jsxDEV(General, {\n              ...dataOBj\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/important\",\n            element: /*#__PURE__*/_jsxDEV(Important, {\n              ...dataOBj\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/planned\",\n            element: /*#__PURE__*/_jsxDEV(Planned, {\n              ...dataOBj\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/tasks\",\n            element: /*#__PURE__*/_jsxDEV(General, {\n              ...dataOBj\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/lists/:id\",\n            element: /*#__PURE__*/_jsxDEV(General, {\n              ...dataOBj\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainContent-general-addTask\",\n        children: /*#__PURE__*/_jsxDEV(AddTask, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Infobar, {\n      ...infobarObj\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Dashboard, \"e7fZXT8r0BnvFmBF7VqPN0UlJLE=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Dashboard;\nexport default _c2 = /*#__PURE__*/memo(Dashboard);\nvar _c, _c2;\n$RefreshReg$(_c, \"Dashboard\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","memo","useEffect","useState","Route","Routes","useLocation","useNavigate","Sidebar","Important","AddTask","Infobar","General","Planned","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_ref","_s","state","updatestate","location","getListname","response","fetch","ok","json","err","console","log","getAccountinfo","getData","match","pathname","important","navigate","listobj","setList","accountObj","setAccount","userId","accountName","emailId","profilepic","dataOBj","setdataobj","tasks","name","dueDate","Date","repeat","completed","taskID","infobarObj","setinfobar","genClass","steps","remind","note","createdOn","verifySession","then","res","children","userLists","accountInfo","fileName","_jsxFileName","lineNumber","columnNumber","className","path","element","_c","_c2","$RefreshReg$"],"sources":["F:/VScode/ReactJS/TODO/todolist/src/pages/dashboard.tsx"],"sourcesContent":["import React, { memo, useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Route, Routes, useLocation, useNavigate } from \"react-router-dom\";\r\nimport Sidebar from \"../components/sidebar.tsx\";\r\nimport Important from \"../components/important.tsx\";\r\nimport AddTask from \"../components/addTask.tsx\";\r\nimport Infobar from \"../components/infobar.tsx\";\r\nimport General from \"../components/General.tsx\";\r\nimport Planned from \"../components/Planned.tsx\";\r\n\r\nfunction Dashboard({ state, updatestate }) {\r\n  const location = useLocation();\r\n  const getListname = async () => {\r\n    try {\r\n      const response = await fetch(\"api/getLists\");\r\n      if (response.ok) {\r\n        return await response.json();\r\n      } else {\r\n        return {};\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const getAccountinfo = async () => {\r\n    try {\r\n      const response = await fetch(\"api/getUser\");\r\n      if (response.ok) {\r\n        return await response.json();\r\n      } else {\r\n        return {};\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const getData = async () => {\r\n    try {\r\n      const match = location.pathname.match(/\\/dashboard\\/(.*)/);\r\n      const important = match ? match[1] : null;\r\n\r\n      console.log(important); // \"important\" value\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n  const [listobj, setList] = useState({});\r\n  const [accountObj, setAccount] = useState({\r\n    userId: \"-1\",\r\n    accountName: \"\",\r\n    emailId: \"\",\r\n    profilepic: \"sidebar-tempProfilepic.png\",\r\n  });\r\n  const [dataOBj, setdataobj] = useState({\r\n    tasks: [\r\n      {\r\n        name: \"new task\",\r\n        dueDate: new Date(),\r\n        important: true,\r\n        repeat: true,\r\n        completed: true,\r\n        taskID: \"1\",\r\n      },\r\n    ],\r\n  });\r\n  const [infobarObj, setinfobar] = useState({\r\n    genClass: \"infoBar infobar-general\",\r\n    name: \"\",\r\n    steps: [\"\"],\r\n    remind: null,\r\n    dueDate: null,\r\n    repeat: null,\r\n    note: \"\",\r\n    createdOn: null,\r\n    important: false,\r\n  });\r\n  const verifySession = async () => {\r\n    try {\r\n      const response = await fetch(\"/api/verifyuser\");\r\n      if (response.ok) {\r\n        updatestate(true);\r\n      } else {\r\n        updatestate(false);\r\n        navigate(\"/\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    verifySession();\r\n    getListname().then((res) => {\r\n      console.log(res);\r\n      setList(res);\r\n    });\r\n    getAccountinfo().then((res) => {\r\n      setAccount(res);\r\n    });\r\n    getData();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Sidebar\r\n        genClass=\"sidebar-general\"\r\n        userLists={listobj}\r\n        accountInfo={accountObj}\r\n      />\r\n      <div className=\"mainContent-general\">\r\n        <div className=\"mainContent-general-tasklist\">\r\n          <Routes>\r\n            <Route path=\"/myday\" element={<General {...dataOBj} />} />\r\n            <Route path=\"/important\" element={<Important {...dataOBj} />} />\r\n            <Route path=\"/planned\" element={<Planned {...dataOBj} />}></Route>\r\n            <Route path=\"/tasks\" element={<General {...dataOBj} />}></Route>\r\n            <Route path=\"/lists/:id\" element={<General {...dataOBj} />}></Route>\r\n          </Routes>\r\n        </div>\r\n        <div className=\"mainContent-general-addTask\">\r\n          <AddTask />\r\n        </div>\r\n      </div>\r\n      <Infobar {...infobarObj} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default memo(Dashboard);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}