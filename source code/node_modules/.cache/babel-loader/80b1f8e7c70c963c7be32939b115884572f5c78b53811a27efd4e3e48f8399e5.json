{"ast":null,"code":"var _jsxFileName = \"F:\\\\VScode\\\\ReactJS\\\\TODO\\\\todolist\\\\src\\\\components\\\\Planned.tsx\";\n/* For page Planned task*/\n/*contains\r\nearlier ,today ,later\r\n*/\nimport React, { memo } from \"react\";\nimport \"../CSS/alltasks.css\";\nimport \"../App.css\";\nimport Task from \"../components/task.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Planned(_ref, setinfobar) {\n  let {\n    today,\n    tomorrow,\n    previous\n  } = _ref;\n  const plannedIcon = require(\"../Images/sidebar-box.png\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alltask\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alltask-heading\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: plannedIcon,\n        alt: \"planned\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Planned\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alltask-parts\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alltask-parts-head\",\n        children: [\"Today \", today.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: today.map((obj, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              setinfobar(obj._id);\n            },\n            children: /*#__PURE__*/_jsxDEV(Task, {\n              ...obj\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alltask-parts\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alltask-parts-head\",\n        children: [\"Later \", tomorrow.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: tomorrow.map((obj, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Task, {\n            ...obj\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alltask-parts\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alltask-parts-head\",\n        children: [\"Earlier \", previous.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: previous.map((obj, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Task, {\n            ...obj\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_c = Planned;\nexport default _c2 = /*#__PURE__*/memo(Planned);\nvar _c, _c2;\n$RefreshReg$(_c, \"Planned\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","memo","Task","jsxDEV","_jsxDEV","Fragment","_Fragment","Planned","_ref","setinfobar","today","tomorrow","previous","plannedIcon","require","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","length","map","obj","index","onClick","_id","_c","_c2","$RefreshReg$"],"sources":["F:/VScode/ReactJS/TODO/todolist/src/components/Planned.tsx"],"sourcesContent":["/* For page Planned task*/\r\n/*contains\r\nearlier ,today ,later\r\n*/\r\nimport React, { memo } from \"react\";\r\nimport \"../CSS/alltasks.css\";\r\nimport \"../App.css\";\r\nimport Task from \"../components/task.tsx\";\r\n\r\ninterface taskprop {\r\n  name: String;\r\n  dueDate: Date;\r\n  important: boolean;\r\n  repeat: boolean;\r\n  completed: boolean;\r\n  _id: String;\r\n}\r\n\r\ninterface planedProp {\r\n  today: taskprop[];\r\n  tomorrow: taskprop[];\r\n  previous: taskprop[];\r\n}\r\n\r\nfunction Planned({ today, tomorrow, previous }: planedProp, setinfobar) {\r\n  const plannedIcon = require(\"../Images/sidebar-box.png\");\r\n\r\n  return (\r\n    <div className=\"alltask\">\r\n      <div className=\"alltask-heading\">\r\n        <img src={plannedIcon} alt=\"planned\"></img>\r\n        <div>Planned</div>\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <div className=\"alltask-parts\">\r\n        <div className=\"alltask-parts-head\">Today {today.length}</div>\r\n        <div>\r\n          {today.map((obj, index) => (\r\n            <>\r\n              <div\r\n                onClick={() => {\r\n                  setinfobar(obj._id);\r\n                }}\r\n              >\r\n                <Task {...obj} />\r\n              </div>\r\n              <br />\r\n            </>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <div className=\"alltask-parts\">\r\n        <div className=\"alltask-parts-head\">Later {tomorrow.length}</div>\r\n        <div>\r\n          {tomorrow.map((obj, index) => (\r\n            <>\r\n              <Task {...obj} />\r\n              <br />\r\n            </>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <div className=\"alltask-parts\">\r\n        <div className=\"alltask-parts-head\">Earlier {previous.length}</div>\r\n        <div>\r\n          {previous.map((obj, index) => (\r\n            <>\r\n              <Task {...obj} />\r\n              <br />\r\n            </>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(Planned);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}