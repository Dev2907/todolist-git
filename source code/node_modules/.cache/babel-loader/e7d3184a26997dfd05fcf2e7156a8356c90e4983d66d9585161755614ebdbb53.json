{"ast":null,"code":"import _objectSpread from\"F:/VScode/ReactJS/TODO/todolist/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"F:/VScode/ReactJS/TODO/todolist/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";/*for Pages : \r\nlists, myday, alltasks, important\r\n*/ /*contains:\r\nnot completed, completed\r\n*/ /* For page Planned task*/ /*contains\r\nearlier ,today ,later\r\n*/import React,{memo,useState}from\"react\";import\"../CSS/alltasks.css\";import\"../App.css\";import Task from\"../components/task.tsx\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Important(_ref){var tasks=_ref.tasks,setinfobar=_ref.setinfobar;var plannedIcon=require(\"../Images/sidebar-box.png\");var threedots=require(\"../Images/infobar-threedots.png\");var _useState=useState(false),_useState2=_slicedToArray(_useState,2),optionmenu=_useState2[0],openoptionmenu=_useState2[1];return/*#__PURE__*/_jsxs(\"div\",{className:\"alltask\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"alltask-heading\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"img\",{src:plannedIcon,alt:\"planned\"}),/*#__PURE__*/_jsx(\"div\",{children:\"Important\"})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"img\",{src:threedots,alt:\"options\",onClick:function onClick(){optionmenu?openoptionmenu(false):openoptionmenu(true);}})})})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"alltask-parts\",children:/*#__PURE__*/_jsx(\"div\",{children:tasks.map(function(obj,index){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{onClick:function onClick(){setinfobar(obj._id);},children:/*#__PURE__*/_jsx(Task,_objectSpread({},obj))}),/*#__PURE__*/_jsx(\"br\",{})]});})})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{})]});}export default/*#__PURE__*/memo(Important);","map":{"version":3,"names":["React","memo","useState","Task","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Important","_ref","tasks","setinfobar","plannedIcon","require","threedots","_useState","_useState2","_slicedToArray","optionmenu","openoptionmenu","className","children","src","alt","onClick","map","obj","index","_id","_objectSpread"],"sources":["F:/VScode/ReactJS/TODO/todolist/src/components/important.tsx"],"sourcesContent":["/*for Pages : \r\nlists, myday, alltasks, important\r\n*/\r\n/*contains:\r\nnot completed, completed\r\n*/\r\n\r\n/* For page Planned task*/\r\n/*contains\r\nearlier ,today ,later\r\n*/\r\nimport React, { memo, useState } from \"react\";\r\nimport \"../CSS/alltasks.css\";\r\nimport \"../App.css\";\r\nimport Task from \"../components/task.tsx\";\r\n\r\ninterface taskprop {\r\n  name: String;\r\n  dueDate: Date;\r\n  important: boolean;\r\n  repeat: boolean;\r\n  completed: boolean;\r\n  _id: String;\r\n}\r\n\r\ninterface importantProp {\r\n  tasks: taskprop[];\r\n  setinfobar: Function;\r\n}\r\n\r\nfunction Important({ tasks, setinfobar }: importantProp) {\r\n  const plannedIcon = require(\"../Images/sidebar-box.png\");\r\n  const threedots = require(\"../Images/infobar-threedots.png\");\r\n  const [optionmenu, openoptionmenu] = useState(false);\r\n  return (\r\n    <div className=\"alltask\">\r\n      <div className=\"alltask-heading\">\r\n        <div>\r\n          <img src={plannedIcon} alt=\"planned\"></img>\r\n          <div>Important</div>\r\n        </div>\r\n        <div>\r\n          <div>\r\n            <img\r\n              src={threedots}\r\n              alt=\"options\"\r\n              onClick={() => {\r\n                optionmenu ? openoptionmenu(false) : openoptionmenu(true);\r\n              }}\r\n            ></img>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <div className=\"alltask-parts\">\r\n        <div>\r\n          {tasks.map((obj, index) => (\r\n            <>\r\n              <div\r\n                onClick={() => {\r\n                  setinfobar(obj._id);\r\n                }}\r\n              >\r\n                <Task {...obj} />\r\n              </div>\r\n              <br />\r\n            </>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <br />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(Important);\r\n"],"mappings":"yOAAA;AACA;AACA,EAFA,CAGA;AACA;AACA,EAFA,CAIA,2BACA;AACA;AACA,EACA,MAAO,CAAAA,KAAK,EAAIC,IAAI,CAAEC,QAAQ,KAAQ,OAAO,CAC7C,MAAO,qBAAqB,CAC5B,MAAO,YAAY,CACnB,MAAO,CAAAC,IAAI,KAAM,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAgB1C,QAAS,CAAAC,SAASA,CAAAC,IAAA,CAAuC,IAApC,CAAAC,KAAK,CAAAD,IAAA,CAALC,KAAK,CAAEC,UAAU,CAAAF,IAAA,CAAVE,UAAU,CACpC,GAAM,CAAAC,WAAW,CAAGC,OAAO,CAAC,2BAA2B,CAAC,CACxD,GAAM,CAAAC,SAAS,CAAGD,OAAO,CAAC,iCAAiC,CAAC,CAC5D,IAAAE,SAAA,CAAqCf,QAAQ,CAAC,KAAK,CAAC,CAAAgB,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA7CG,UAAU,CAAAF,UAAA,IAAEG,cAAc,CAAAH,UAAA,IACjC,mBACEX,KAAA,QAAKe,SAAS,CAAC,SAAS,CAAAC,QAAA,eACtBhB,KAAA,QAAKe,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BhB,KAAA,QAAAgB,QAAA,eACElB,IAAA,QAAKmB,GAAG,CAAEV,WAAY,CAACW,GAAG,CAAC,SAAS,CAAM,CAAC,cAC3CpB,IAAA,QAAAkB,QAAA,CAAK,WAAS,CAAK,CAAC,EACjB,CAAC,cACNlB,IAAA,QAAAkB,QAAA,cACElB,IAAA,QAAAkB,QAAA,cACElB,IAAA,QACEmB,GAAG,CAAER,SAAU,CACfS,GAAG,CAAC,SAAS,CACbC,OAAO,CAAE,SAAAA,QAAA,CAAM,CACbN,UAAU,CAAGC,cAAc,CAAC,KAAK,CAAC,CAAGA,cAAc,CAAC,IAAI,CAAC,CAC3D,CAAE,CACE,CAAC,CACJ,CAAC,CACH,CAAC,EACH,CAAC,cACNhB,IAAA,QAAK,CAAC,cACNA,IAAA,QAAK,CAAC,cACNA,IAAA,QAAKiB,SAAS,CAAC,eAAe,CAAAC,QAAA,cAC5BlB,IAAA,QAAAkB,QAAA,CACGX,KAAK,CAACe,GAAG,CAAC,SAACC,GAAG,CAAEC,KAAK,qBACpBtB,KAAA,CAAAE,SAAA,EAAAc,QAAA,eACElB,IAAA,QACEqB,OAAO,CAAE,SAAAA,QAAA,CAAM,CACbb,UAAU,CAACe,GAAG,CAACE,GAAG,CAAC,CACrB,CAAE,CAAAP,QAAA,cAEFlB,IAAA,CAACF,IAAI,CAAA4B,aAAA,IAAKH,GAAG,CAAG,CAAC,CACd,CAAC,cACNvB,IAAA,QAAK,CAAC,EACN,CAAC,EACJ,CAAC,CACC,CAAC,CACH,CAAC,cACNA,IAAA,QAAK,CAAC,cACNA,IAAA,QAAK,CAAC,EACH,CAAC,CAEV,CAEA,2BAAeJ,IAAI,CAACS,SAAS,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}