{"ast":null,"code":"import _objectSpread from\"F:/VScode/ReactJS/TODO/todolist/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";/*for Pages : \r\nlists, myday, alltasks, important\r\n*/ /*contains:\r\nnot completed, completed\r\n*/ /* For page Planned task*/ /*contains\r\nearlier ,today ,later\r\n*/import React,{memo}from\"react\";import\"../CSS/alltasks.css\";import\"../App.css\";import Task from\"../components/task.tsx\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function General(_ref){var incomplete=_ref.incomplete,completed=_ref.completed;var plannedIcon=require(\"../Images/sidebar-box.png\");return/*#__PURE__*/_jsxs(\"div\",{className:\"alltask\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"alltask-heading\",children:[/*#__PURE__*/_jsx(\"img\",{src:plannedIcon,alt:\"planned\"}),/*#__PURE__*/_jsx(\"div\",{children:\"Planned\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"alltask-parts\",children:/*#__PURE__*/_jsx(\"div\",{children:incomplete.map(function(obj,index){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Task,_objectSpread({},obj)),/*#__PURE__*/_jsx(\"br\",{})]});})})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"alltask-parts\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"alltask-parts-head\",children:\"Completed\"}),/*#__PURE__*/_jsx(\"div\",{children:completed.map(function(obj,index){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Task,_objectSpread({},obj)),/*#__PURE__*/_jsx(\"br\",{})]});})})]})]});}export default/*#__PURE__*/memo(General);","map":{"version":3,"names":["React","memo","Task","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","General","_ref","incomplete","completed","plannedIcon","require","className","children","src","alt","map","obj","index","_objectSpread"],"sources":["F:/VScode/ReactJS/TODO/todolist/src/components/General.tsx"],"sourcesContent":["/*for Pages : \r\nlists, myday, alltasks, important\r\n*/\r\n/*contains:\r\nnot completed, completed\r\n*/\r\n\r\n/* For page Planned task*/\r\n/*contains\r\nearlier ,today ,later\r\n*/\r\nimport React, { memo } from \"react\";\r\nimport \"../CSS/alltasks.css\";\r\nimport \"../App.css\";\r\nimport Task from \"../components/task.tsx\";\r\n\r\ninterface taskprop {\r\n  name: String;\r\n  dueDate: Date;\r\n  important: boolean;\r\n  repeat: boolean;\r\n  completed: boolean;\r\n  taskID: String;\r\n}\r\n\r\ninterface GeneralProp {\r\n  incomplete: taskprop[];\r\n  completed: taskprop[];\r\n}\r\n\r\nfunction General({ incomplete, completed }: GeneralProp) {\r\n  const plannedIcon = require(\"../Images/sidebar-box.png\");\r\n\r\n  return (\r\n    <div className=\"alltask\">\r\n      <div className=\"alltask-heading\">\r\n        <img src={plannedIcon} alt=\"planned\"></img>\r\n        <div>Planned</div>\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <div className=\"alltask-parts\">\r\n        <div>\r\n          {incomplete.map((obj, index) => (\r\n            <>\r\n              <Task {...obj} />\r\n              <br />\r\n            </>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <div className=\"alltask-parts\">\r\n        <div className=\"alltask-parts-head\">Completed</div>\r\n        <div>\r\n          {completed.map((obj, index) => (\r\n            <>\r\n              <Task {...obj} />\r\n              <br />\r\n            </>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(General);\r\n"],"mappings":"oHAAA;AACA;AACA,EAFA,CAGA;AACA;AACA,EAFA,CAIA,2BACA;AACA;AACA,EACA,MAAO,CAAAA,KAAK,EAAIC,IAAI,KAAQ,OAAO,CACnC,MAAO,qBAAqB,CAC5B,MAAO,YAAY,CACnB,MAAO,CAAAC,IAAI,KAAM,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAgB1C,QAAS,CAAAC,OAAOA,CAAAC,IAAA,CAAyC,IAAtC,CAAAC,UAAU,CAAAD,IAAA,CAAVC,UAAU,CAAEC,SAAS,CAAAF,IAAA,CAATE,SAAS,CACtC,GAAM,CAAAC,WAAW,CAAGC,OAAO,CAAC,2BAA2B,CAAC,CAExD,mBACER,KAAA,QAAKS,SAAS,CAAC,SAAS,CAAAC,QAAA,eACtBV,KAAA,QAAKS,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BZ,IAAA,QAAKa,GAAG,CAAEJ,WAAY,CAACK,GAAG,CAAC,SAAS,CAAM,CAAC,cAC3Cd,IAAA,QAAAY,QAAA,CAAK,SAAO,CAAK,CAAC,EACf,CAAC,cACNZ,IAAA,QAAK,CAAC,cACNA,IAAA,QAAK,CAAC,cACNA,IAAA,QAAKW,SAAS,CAAC,eAAe,CAAAC,QAAA,cAC5BZ,IAAA,QAAAY,QAAA,CACGL,UAAU,CAACQ,GAAG,CAAC,SAACC,GAAG,CAAEC,KAAK,qBACzBf,KAAA,CAAAE,SAAA,EAAAQ,QAAA,eACEZ,IAAA,CAACF,IAAI,CAAAoB,aAAA,IAAKF,GAAG,CAAG,CAAC,cACjBhB,IAAA,QAAK,CAAC,EACN,CAAC,EACJ,CAAC,CACC,CAAC,CACH,CAAC,cACNA,IAAA,QAAK,CAAC,cACNA,IAAA,QAAK,CAAC,cACNE,KAAA,QAAKS,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BZ,IAAA,QAAKW,SAAS,CAAC,oBAAoB,CAAAC,QAAA,CAAC,WAAS,CAAK,CAAC,cACnDZ,IAAA,QAAAY,QAAA,CACGJ,SAAS,CAACO,GAAG,CAAC,SAACC,GAAG,CAAEC,KAAK,qBACxBf,KAAA,CAAAE,SAAA,EAAAQ,QAAA,eACEZ,IAAA,CAACF,IAAI,CAAAoB,aAAA,IAAKF,GAAG,CAAG,CAAC,cACjBhB,IAAA,QAAK,CAAC,EACN,CAAC,EACJ,CAAC,CACC,CAAC,EACH,CAAC,EACH,CAAC,CAEV,CAEA,2BAAeH,IAAI,CAACQ,OAAO,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}